# See the NOTICE file distributed with this work for additional information
# regarding copyright ownership.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


upstream django_backend {
  # the words 'django' and 'react' below are the names of the respective services which would later be run by docker-compose
  server django:8000;
}

upstream react_frontend {
  server react:3000;
}

server {

  listen 80;

  # URL ROUTING
  # Any URL with /admin or /api in it would take us to the django_backend
  location /admin {
    proxy_pass http://django_backend;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $host;
    proxy_redirect off;
  }

  location /api {
    proxy_pass http://django_backend;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $host;
    proxy_redirect off;
  }

  # STATIC FOLDER ROUTING
  # The static folder routing specifies the mapping of the routes to the correct static asset folders for both
  # the django and react applications. These static folders would appear at specific directories within
  # the nginx container, using volumes mapping defined in the docker-compose file
  location /static/admin/ {
    alias /usr/src/app/django_files/static/admin/;
  }

  location /static/rest_framework/ {
    alias /usr/src/app/django_files/static/rest_framework/;
  }

  location /static/ {
    alias /usr/src/app/react_files/static/;
  }

  location /media/ {
    alias /usr/src/app/media/;
  }

  # URL ROUTING
  # Any routes which don't point to either the admin, API or static assets would be sent to the react_frontend service.
  location / {
    proxy_pass http://react_frontend;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $host;
    proxy_redirect off;
  }
}