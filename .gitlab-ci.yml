image: python:3.7

# GitLab CI uses the services keyword to define what docker containers should be linked with our base image.
# Since we are using docker as our image we'll be using docker:dind i.e. Docker-In-Docker-Image
services:
  - name: docker:19.03.12-dind

# Since we are using Alpine, everything is not installed by default.
# Thus we are setting up the basics
before_script:
  - python -V

variables:
  # Environemt Variable for docker:dind service explaining to use overlay2 as supporting driver for docker
  DOCKER_DRIVER: overlay2


# This is the major part of the code which explains the stages present in our pipeline.
# In a django application we have various stages which include testing, packing the code,
# performing migrations, collecting static files and running the application.
# The various stages are broadly classified into 3 main categories:
# 1. Test       2. Release      3. Deploy

stages:
  - test
  - build
  - deploy


# Stage I
# Testing Phase:
# This is where the main code is tested.
# Other options like code coverage, etc are also written in this phase

pylint:
  stage: test
  # This job doesn't depend on the others
  needs: []
  before_script:
    # Installing mysql and requirements
    - pip install -r requirements.txt
  script:
    - pylint $(git ls-files '*.py') --django-settings-module=thr.settings --fail-under=9


pytest:
  stage: test
  before_script:
    # Installing mysql and requirements
    - apt-get update && apt-get install -y git curl libmcrypt-dev default-mysql-client
    - mysql --version
    - echo "Sleeping for 20 seconds.."; sleep 20;
    - pip install -r requirements.txt
    # Executing makemigrations and migrate
    - python manage.py makemigrations
    - python manage.py migrate
    - curl http://elasticsearch:9200
    # Delete the indices and then recreate and populate them
    - python manage.py search_index --rebuild -f
    - curl -X GET "elasticsearch:9200/_cat/indices"

  variables:
    # Configure mysql service (https://hub.docker.com/_/mysql/)
    MYSQL_HOST: "mysql"
    MYSQL_DATABASE: "thr_db"
    MYSQL_USER: "thr_dev"
    MYSQL_PASSWORD: "password"
    MYSQL_ROOT_PASSWORD: "password"
    # Configure Elascticsearch
    ELASTICSEARCH_URL: "http://elasticsearch:9200"

  services:
    - name: mysql:5.7
      alias: mysql

    - name: docker.elastic.co/elasticsearch/elasticsearch:6.3.0
      alias: elasticsearch
      command: [ "bin/elasticsearch", "-Expack.security.enabled=false", "-Ediscovery.type=single-node" ]

  script:
    # Command to test our application
    - pytest -v


build:
  image: docker:19.03.12
  stage: build
  services:
    - docker:19.03.12-dind
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  script:
#    - docker login -u bilal -p $CI_REGISTRY_TOKEN dockerhub.ebi.ac.uk
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_TOKEN $CI_REGISTRY
    - docker build -t $IMAGE_TAG .
    - docker push $IMAGE_TAG
